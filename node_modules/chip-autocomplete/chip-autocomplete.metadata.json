{"__symbolic":"module","version":4,"metadata":{"ChipAutocompleteService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"ChipAutocompleteComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"chip-autocomplete","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":11,"character":19},"member":"OnPush"},"providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":14,"character":15},"useExisting":{"__symbolic":"reference","name":"ChipAutocompleteComponent"},"multi":true}],"template":"<form [formGroup]=\"form\" class=\"form\">\n    <mat-form-field class=\"form-element\">\n        <mat-chip-list #chipList formControlName=\"control\" [required]=\"required\">\n            <mat-chip *ngFor=\"let ctr of control.value\" [removable]=\"true\" (removed)=\"remove(ctr)\">\n                {{ isOptionString ? ctr : ctr[displayWith] }}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n            </mat-chip>\n            <input #input matInput [placeholder]=\"placeholder\" (input)=\"changeInput($event.target.value)\"\n                [matChipInputFor]=\"chipList\" [matAutocomplete]=\"ref\" (matChipInputTokenEnd)=\"add($event)\"\n                [disabled]=\"disabled\" (keyup.enter)=\"chooseFirstOption('enter')\" (keyup.tab)=\"chooseFirstOption('tab')\"\n                (blur)=\"onBlur()\" (focus)=\"changeInput()\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\">\n            <mat-autocomplete #ref=\"matAutocomplete\" (optionSelected)=\"onSelect($event.option.value)\">\n                <ng-container *ngIf=\"!isOptionCheckable\">\n                    <mat-option *ngFor=\"let ctr of (clientSideFilter? filteredOptions : (filteredOptions$ | async))\"\n                        [value]=\"ctr\" [disabled]=\"disabledSelected && isSelected(ctr)\">\n                        {{ isOptionString ? ctr : ctr[displayWith] }}\n                    </mat-option>\n                </ng-container>\n                <ng-container *ngIf=\"isOptionCheckable\">\n                    <mat-option class=\"option-checkbox-wrap\" *ngFor=\"let ctr of (clientSideFilter? filteredOptions : (filteredOptions$ | async))\"\n                        [value]=\"ctr\">\n                        <div (click)=\"clickCheckboxWrap($event, ctr)\">\n                            <mat-checkbox [checked]=\"isSelected(ctr)\"\n                                [disabled]=\"!isSelected(ctr) && control.value && maxItems && control.value.length >= maxItems\"\n                                (change)=\"toggleSelection(ctr)\" (click)=\"$event.stopPropagation()\">\n                                {{ isOptionString ? ctr : ctr[displayWith] }}\n                            </mat-checkbox>\n                        </div>\n                    </mat-option>\n                </ng-container>\n            </mat-autocomplete>\n        </mat-chip-list>\n    </mat-form-field>\n</form>","styles":[".form{min-width:150px;max-width:500px;width:100%}.form-element{padding:5px 0 25px 40px;width:100%}.mat-option.option-checkbox-wrap{padding:0}.mat-option.option-checkbox-wrap .mat-checkbox{padding:0 16px}.mat-option:first-child{background:rgba(0,0,0,.04)}"]}]}],"members":{"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"clientSideFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"maxItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"removable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"required":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"isOptionString":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"displayWith":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"itemId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"disabledSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"filteredOptions$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"debounceTime":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"isChipAddFromInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"isOptionCheckable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"changeSearchkey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":35,"character":3}}]}],"input":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":36,"character":3},"arguments":["input",{"static":false}]}]}],"matAutocomplete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":37,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocomplete","line":37,"character":13},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":47,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}],"changeInput":[{"__symbolic":"method"}],"filterOption":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"afterSelect":[{"__symbolic":"method"}],"chooseFirstOption":[{"__symbolic":"method"}],"clickCheckboxWrap":[{"__symbolic":"method"}],"toggleSelection":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}]}},"ChipAutocompleteModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":12,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ChipAutocompleteComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":15,"character":4},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":23,"character":4}],"exports":[{"__symbolic":"reference","name":"ChipAutocompleteComponent"}]}]}],"members":{}}},"origins":{"ChipAutocompleteService":"./lib/chip-autocomplete.service","ChipAutocompleteComponent":"./lib/chip-autocomplete.component","ChipAutocompleteModule":"./lib/chip-autocomplete.module"},"importAs":"chip-autocomplete"}
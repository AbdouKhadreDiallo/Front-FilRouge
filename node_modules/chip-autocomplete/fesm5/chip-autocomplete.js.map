{"version":3,"file":"chip-autocomplete.js","sources":["ng://chip-autocomplete/lib/chip-autocomplete.service.ts","ng://chip-autocomplete/lib/chip-autocomplete.component.ts","ng://chip-autocomplete/lib/chip-autocomplete.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChipAutocompleteService {\n\n  constructor() { }\n}\n","import { Component, OnInit, forwardRef, Input, ViewChild, ElementRef, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { Observable, Subject, timer } from 'rxjs';\nimport { distinctUntilChanged, debounce } from 'rxjs/operators';\n\n@Component({\n  selector: 'chip-autocomplete',\n  templateUrl: './chip-autocomplete.component.html',\n  styleUrls: ['./chip-autocomplete.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ChipAutocompleteComponent),\n      multi: true\n    }\n  ]\n})\nexport class ChipAutocompleteComponent implements OnInit, ControlValueAccessor {\n  @Input() placeholder = 'Select';\n  @Input() clientSideFilter = true;\n  @Input() options: any[];\n  @Input() maxItems = null;\n  @Input() removable = true;\n  @Input() required = true;\n  @Input() isOptionString = true;\n  @Input() displayWith = 'value';\n  @Input() itemId = 'key';\n  @Input() disabledSelected = true;\n  @Input() filteredOptions$: Observable<any>;\n  @Input() debounceTime = 500;\n  @Input() isChipAddFromInput = false;\n  @Input() isOptionCheckable = false;\n  @Output() changeSearchkey = new EventEmitter<string>();\n  @ViewChild('input', { static: false }) input: ElementRef<HTMLInputElement>;\n  @ViewChild(MatAutocomplete, { static: true }) matAutocomplete: MatAutocomplete;\n\n  separatorKeysCodes: number[] = [13, 9]\n  onTouch: any = () => { };\n  onChange: any = () => { };\n  form: FormGroup;\n  filteredOptions: any;\n  disabled = false;\n  debounceHelper = new Subject();\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.changeInput('');\n    this.form = this.fb.group({\n      control: [''],\n    })\n    this.form.valueChanges.subscribe(form => {\n      setTimeout(() => this.onChange(form.control), 0);\n    })\n    this.debounceHelper.pipe(\n      debounce(() => timer(this.debounceTime)),\n      distinctUntilChanged()\n    ).subscribe((res: string) => this.changeSearchkey.emit(res));\n    if (this.clientSideFilter) {\n      if (this.options.some(option => typeof(option) === 'string')) {\n        this.isOptionString = true;\n      } else {\n        this.isOptionString = false;\n      }\n    }\n  }\n  get control() {\n    return this.form.get('control');\n  }\n\n  add(event: MatChipInputEvent): void {\n    if (this.isChipAddFromInput && !this.matAutocomplete.showPanel) {\n      const input = event.input;\n      const value = event.value;\n      if (this.isOptionString) {\n        if ((value || '').trim()) {\n          this.control.setValue([...this.control.value || [], value.trim()]);\n        }\n      } else {\n        const obj = {};\n        obj[this.itemId] = value;\n        obj[this.displayWith] = value;\n        this.control.setValue([...this.control.value || [], obj]);\n      }\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n    }\n  }\n\n  remove(chip): void {\n    const index = this.control.value.findIndex((ctr) =>\n      this.isOptionString ? ctr === chip : ctr[this.itemId] === chip[this.itemId]);\n    if (index >= 0) {\n      this.changeInput();\n      this.control.value.splice(index, 1);\n      if (this.control.value.length === 0) {\n        this.control.setValue(null);\n      } else {\n        this.control.updateValueAndValidity();\n      }\n      this.disabled = false;\n    }\n  }\n\n  changeInput(key: string = '') {\n    this.clientSideFilter ? this.filteredOptions = this.filterOption(key) : this.debounceHelper.next(key);\n  }\n\n  filterOption(key: string) {\n    return (key === '') ? this.options : this.options.filter(f =>\n      this.isOptionString ? f.toLowerCase().includes(key.toLowerCase()) :\n        (f[this.displayWith]).toLowerCase().includes(key.toLowerCase()));\n  }\n\n  onSelect(value) {\n    this.control.setValue([...this.control.value || [], value]);\n    this.afterSelect();\n  }\n\n  afterSelect() {\n    this.input.nativeElement.value = '';\n    if (this.maxItems && this.control.value.length === this.maxItems) {\n      this.disabled = true;\n    }\n    this.changeInput();\n  }\n\n  isSelected = (option) => {\n    return this.control.value && this.control.value.some(ctr =>\n      this.isOptionString ? ctr === option : ctr[this.itemId] === option[this.itemId]);\n  }\n  chooseFirstOption(keyCode) {\n    if (this.matAutocomplete.options.first && (!this.control.value || (this.control.value && !this.control.value.some(ctr =>\n      this.isOptionString ? ctr === this.matAutocomplete.options.first.value :\n        ctr[this.itemId] === this.matAutocomplete.options.first.value[this.itemId])))) {\n      if (keyCode === 'enter') {\n        this.matAutocomplete.options.first.select();\n      } else if (keyCode === 'tab') {\n        this.control.setValue([...this.control.value || [], this.matAutocomplete.options.first.value]);\n        this.afterSelect();\n      }\n    }\n  }\n  clickCheckboxWrap($event, option) {\n    $event.stopPropagation();\n    this.toggleSelection(option);\n  }\n  toggleSelection(option) {\n    if (this.isSelected(option)) {\n      this.remove(option);\n    } else {\n      if (!this.control.value || !this.maxItems ||this.control.value.length < this.maxItems) {\n        this.onSelect(option)\n      }\n    }\n  }\n\n  onBlur() {\n    this.input.nativeElement.value = '';\n    this.changeInput();\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  writeValue(val: string) {\n    this.control.setValue(val);\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n}","import { NgModule } from '@angular/core';\nimport { ChipAutocompleteComponent } from './chip-autocomplete.component';\nimport { CommonModule } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@NgModule({\n  declarations: [ChipAutocompleteComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatSelectModule,\n    ReactiveFormsModule\n  ],\n  exports: [ChipAutocompleteComponent]\n})\nexport class ChipAutocompleteModule { }\n"],"names":[],"mappings":"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"}
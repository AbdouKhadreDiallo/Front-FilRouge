{"version":3,"file":"chip-autocomplete.js","sources":["chip-autocomplete/lib/chip-autocomplete.service.ts","chip-autocomplete/lib/chip-autocomplete.component.ts","chip-autocomplete/lib/chip-autocomplete.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChipAutocompleteService {\n\n  constructor() { }\n}\n","import { Component, OnInit, forwardRef, Input, ViewChild, ElementRef, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { Observable, Subject, timer } from 'rxjs';\nimport { distinctUntilChanged, debounce } from 'rxjs/operators';\n\n@Component({\n  selector: 'chip-autocomplete',\n  templateUrl: './chip-autocomplete.component.html',\n  styleUrls: ['./chip-autocomplete.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ChipAutocompleteComponent),\n      multi: true\n    }\n  ]\n})\nexport class ChipAutocompleteComponent implements OnInit, ControlValueAccessor {\n  @Input() placeholder = 'Select';\n  @Input() clientSideFilter = true;\n  @Input() options: any[];\n  @Input() maxItems = null;\n  @Input() removable = true;\n  @Input() required = true;\n  @Input() isOptionString = true;\n  @Input() displayWith = 'value';\n  @Input() itemId = 'key';\n  @Input() disabledSelected = true;\n  @Input() filteredOptions$: Observable<any>;\n  @Input() debounceTime = 500;\n  @Input() isChipAddFromInput = false;\n  @Input() isOptionCheckable = false;\n  @Output() changeSearchkey = new EventEmitter<string>();\n  @ViewChild('input', { static: false }) input: ElementRef<HTMLInputElement>;\n  @ViewChild(MatAutocomplete, { static: true }) matAutocomplete: MatAutocomplete;\n\n  separatorKeysCodes: number[] = [13, 9]\n  onTouch: any = () => { };\n  onChange: any = () => { };\n  form: FormGroup;\n  filteredOptions: any;\n  disabled = false;\n  debounceHelper = new Subject();\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.changeInput('');\n    this.form = this.fb.group({\n      control: [''],\n    })\n    this.form.valueChanges.subscribe(form => {\n      setTimeout(() => this.onChange(form.control), 0);\n    })\n    this.debounceHelper.pipe(\n      debounce(() => timer(this.debounceTime)),\n      distinctUntilChanged()\n    ).subscribe((res: string) => this.changeSearchkey.emit(res));\n    if (this.clientSideFilter) {\n      if (this.options.some(option => typeof(option) === 'string')) {\n        this.isOptionString = true;\n      } else {\n        this.isOptionString = false;\n      }\n    }\n  }\n  get control() {\n    return this.form.get('control');\n  }\n\n  add(event: MatChipInputEvent): void {\n    if (this.isChipAddFromInput && !this.matAutocomplete.showPanel) {\n      const input = event.input;\n      const value = event.value;\n      if (this.isOptionString) {\n        if ((value || '').trim()) {\n          this.control.setValue([...this.control.value || [], value.trim()]);\n        }\n      } else {\n        const obj = {};\n        obj[this.itemId] = value;\n        obj[this.displayWith] = value;\n        this.control.setValue([...this.control.value || [], obj]);\n      }\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n    }\n  }\n\n  remove(chip): void {\n    const index = this.control.value.findIndex((ctr) =>\n      this.isOptionString ? ctr === chip : ctr[this.itemId] === chip[this.itemId]);\n    if (index >= 0) {\n      this.changeInput();\n      this.control.value.splice(index, 1);\n      if (this.control.value.length === 0) {\n        this.control.setValue(null);\n      } else {\n        this.control.updateValueAndValidity();\n      }\n      this.disabled = false;\n    }\n  }\n\n  changeInput(key: string = '') {\n    this.clientSideFilter ? this.filteredOptions = this.filterOption(key) : this.debounceHelper.next(key);\n  }\n\n  filterOption(key: string) {\n    return (key === '') ? this.options : this.options.filter(f =>\n      this.isOptionString ? f.toLowerCase().includes(key.toLowerCase()) :\n        (f[this.displayWith]).toLowerCase().includes(key.toLowerCase()));\n  }\n\n  onSelect(value) {\n    this.control.setValue([...this.control.value || [], value]);\n    this.afterSelect();\n  }\n\n  afterSelect() {\n    this.input.nativeElement.value = '';\n    if (this.maxItems && this.control.value.length === this.maxItems) {\n      this.disabled = true;\n    }\n    this.changeInput();\n  }\n\n  isSelected = (option) => {\n    return this.control.value && this.control.value.some(ctr =>\n      this.isOptionString ? ctr === option : ctr[this.itemId] === option[this.itemId]);\n  }\n  chooseFirstOption(keyCode) {\n    if (this.matAutocomplete.options.first && (!this.control.value || (this.control.value && !this.control.value.some(ctr =>\n      this.isOptionString ? ctr === this.matAutocomplete.options.first.value :\n        ctr[this.itemId] === this.matAutocomplete.options.first.value[this.itemId])))) {\n      if (keyCode === 'enter') {\n        this.matAutocomplete.options.first.select();\n      } else if (keyCode === 'tab') {\n        this.control.setValue([...this.control.value || [], this.matAutocomplete.options.first.value]);\n        this.afterSelect();\n      }\n    }\n  }\n  clickCheckboxWrap($event, option) {\n    $event.stopPropagation();\n    this.toggleSelection(option);\n  }\n  toggleSelection(option) {\n    if (this.isSelected(option)) {\n      this.remove(option);\n    } else {\n      if (!this.control.value || !this.maxItems ||this.control.value.length < this.maxItems) {\n        this.onSelect(option)\n      }\n    }\n  }\n\n  onBlur() {\n    this.input.nativeElement.value = '';\n    this.changeInput();\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  writeValue(val: string) {\n    this.control.setValue(val);\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n}","import { NgModule } from '@angular/core';\nimport { ChipAutocompleteComponent } from './chip-autocomplete.component';\nimport { CommonModule } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@NgModule({\n  declarations: [ChipAutocompleteComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatSelectModule,\n    ReactiveFormsModule\n  ],\n  exports: [ChipAutocompleteComponent]\n})\nexport class ChipAutocompleteModule { }\n"]}